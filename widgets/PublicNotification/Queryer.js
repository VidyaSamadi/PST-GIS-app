// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.15/esri/copyright.txt and http://www.arcgis.com/apps/webappbuilder/copyright.txt for details.
//>>built
define("dojo/_base/array dojo/_base/declare dojo/_base/lang dojo/Deferred esri/geometry/geometryEngineAsync esri/tasks/BufferParameters esri/tasks/GeometryService esri/tasks/query esri/tasks/QueryTask".split(" "),function(n,p,g,h,l,m,k,q,r){return p([],{constructor:function(f,b){this.map=f;this._geometryService=new k(b)},createBufferFromGeometries:function(f,b){var c,e,d;c=new h;if(!Array.isArray(f))return c.reject("No geometries to buffer"),c;e=b;l.union(f).then(g.hitch(this,function(a){a?0<e||"polygon"===
a.type?(0===e&&(e=-.1),d=new m,d.bufferSpatialReference=this.map.spatialReference,d.distances=[e],d.geodesic=!0,d.geometries=[a],d.outSpatialReference=this.map.spatialReference,d.unit=k.UNIT_METER,this._geometryService.buffer(d,function(a){Array.isArray(a)&&0<a.length?c.resolve(a[0]):c.reject("Buffering failed")},function(a){c.reject("Buffering failed: "+a)})):c.resolve(a):c.reject("Unioning failed")}),function(a){c.reject(a)});return c},findIntersectingFeatures:function(f,b,c){var e,d=new h,a={};
b=new r(b);e=new q;e.geometry=f;e.returnGeometry=!0;e.outFields=c;b.execute(e,g.hitch(this,function(c){c&&Array.isArray(c.features)&&0<c.features.length?l.union(this._getFeatureGeometries(c.features)).then(g.hitch(this,function(e){var b;Array.isArray(e.rings)&&0<e.rings.length?(b=new m,b.bufferSpatialReference=this.map.spatialReference,b.distances=[-.1],b.geodesic=!0,b.geometries=[e],b.outSpatialReference=this.map.spatialReference,b.unit=k.UNIT_METER,this._geometryService.buffer(b,function(b){Array.isArray(b)&&
0<b.length?(a.intersectGeometry=f,a.features=c.features,a.highlight=b[0],d.resolve(a)):d.reject("Buffering union failed")})):(a.intersectGeometry=f,a.features=c.features,a.highlight=e,d.resolve(a))})):(a.intersectGeometry=f,a.features=[],a.highlight=null,d.resolve(a))}),function(a){d.reject(a)});return d},find:function(f,b,c,e){var d=new h;this.findIntersectingFeatures(f,b,c).then(g.hitch(this,function(a){console.log(a.features.length+" "+e+" features found");d.resolve(a)}),function(a){d.reject(a)});
return d},_getFeatureGeometries:function(f){return n.map(f,g.hitch(this,function(b){return b.geometry}))}})});